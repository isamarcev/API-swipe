# Generated by Django 4.1.3 on 2022-11-17 21:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_big', models.BooleanField(blank=True, null=True)),
                ('is_up', models.BooleanField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
                ('is_turbo', models.BooleanField(blank=True, null=True)),
                ('add_text', models.BooleanField(blank=True, null=True)),
                ('add_color', models.BooleanField(blank=True, null=True)),
                ('text', models.CharField(choices=[('present', 'Подарок при покупке'), ('bargain', 'Возможен торг'), ('sea', 'Квартира у моря'), ('sleep', 'В спальном районе'), ('price', 'Вам повезло с ценой!'), ('big_family', 'Для большой семьи'), ('family_nest', 'Семейное гнездышко'), ('parking', 'Отдельная парковка')], max_length=20)),
                ('color', models.CharField(choices=[('#d13fcf', 'Розовый'), ('#93cf9b', 'Зеленый')], max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moderation_status', models.CharField(blank=True, choices=[('price', 'Некорректная цена'), ('photo', 'Некорректное фото'), ('description', 'Некорректное описание')], max_length=20, null=True)),
                ('moderation_decide', models.CharField(choices=[('confirm', 'Отказано'), ('reject', 'Отклонено')], max_length=20)),
                ('is_booked', models.BooleanField(blank=True, null=True)),
                ('number', models.PositiveIntegerField()),
                ('corpus', models.PositiveIntegerField()),
                ('section', models.PositiveIntegerField()),
                ('floor', models.PositiveIntegerField()),
                ('rises', models.PositiveIntegerField()),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('foundation', models.CharField(choices=[('Фз 2014', 'Фз 2014'), ('random', 'Случайная')], max_length=200)),
                ('purpose', models.CharField(choices=[('apartment', 'Апартаменты'), ('cottage', 'Коттедж')], max_length=20)),
                ('rooms', models.PositiveIntegerField()),
                ('plan', models.CharField(choices=[('studio', 'Студия, санузел'), ('simple', 'Обычная')], max_length=30)),
                ('condition', models.CharField(choices=[('repairNeeded', 'Требуется ремонт'), ('living', 'Жилое'), ('empty', 'Голые стены')], max_length=30)),
                ('area', models.DecimalField(decimal_places=2, max_digits=2)),
                ('kitchenArea', models.DecimalField(decimal_places=2, max_digits=2)),
                ('has_balcony', models.BooleanField(blank=True, null=True)),
                ('heating', models.CharField(choices=[('gas', 'Газовое'), ('electro', 'Електро')], max_length=20)),
                ('payment_options', models.CharField(choices=[('onlycash', 'Только наличные'), ('capital', 'Мат. капитал'), ('mortgage', 'Ипотека'), ('no matter', 'Неважно')], max_length=30)),
                ('comission', models.PositiveIntegerField()),
                ('communication_type', models.CharField(choices=[('callmessage', 'Звонок + сообщение'), ('call', 'Только звонки'), ('message', 'Сообщение')], max_length=100)),
                ('price', models.PositiveIntegerField()),
                ('schema', models.ImageField(upload_to='complexes/None/apartment-<django.db.models.fields.PositiveIntegerField>/schema/')),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='apartments/images/')),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=300)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('is_reviewed', models.BooleanField(blank=True, default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Complex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('address', models.CharField(max_length=100)),
                ('map_lat', models.DecimalField(blank=True, decimal_places=10, max_digits=10, null=True)),
                ('map_long', models.DecimalField(blank=True, decimal_places=10, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('ready', 'Сдан'), ('building', 'Строится')], max_length=20)),
                ('type', models.CharField(choices=[('panel', 'Панельный'), ('brick', 'Кирпичный')], max_length=20)),
                ('klass', models.CharField(choices=[('elit', 'Елитный'), ('budget', 'Бюджетный')], max_length=15)),
                ('technology', models.CharField(choices=[('monolite', 'Монолитный каркас с керамзитным поддоном'), ('brick', 'Жженый кирпич октябрь')], max_length=50)),
                ('territory', models.CharField(choices=[('closed', 'Закрытая охраняемая'), ('open', 'Открытая с доступом')], max_length=50)),
                ('distance_to_sea', models.PositiveIntegerField()),
                ('invoice', models.CharField(choices=[('invoice', 'Платежи'), ('transaction', 'Актиный платеж')], max_length=30)),
                ('cell_height', models.DecimalField(decimal_places=2, max_digits=2)),
                ('gas', models.BooleanField(blank=True, null=True)),
                ('electricity', models.CharField(choices=[('connect', 'Подключено'), ('disconnect', 'Отключено')], max_length=10)),
                ('heating', models.CharField(choices=[('central', 'Центральное'), ('auto', 'Автономное')], max_length=10)),
                ('water_cupply', models.CharField(choices=[('central', 'Центральное'), ('auto', 'Автономное')], max_length=10)),
                ('sewerage', models.CharField(choices=[('central', 'Центральное'), ('auto', 'Автономное')], max_length=10)),
                ('formalization', models.CharField(choices=[('justice', 'Юстиция'), ('proxy', 'Доверенность')], max_length=20)),
                ('payment_form', models.CharField(choices=[('onlycash', 'Только наличные'), ('capital', 'Мат. капитал'), ('mortgage', 'Ипотека'), ('no matter', 'Неважно')], max_length=20)),
                ('purpose', models.CharField(choices=[('flat', 'Квартира'), ('commercial', 'Для коммерции'), ('living', 'Жилое помещение')], max_length=30)),
                ('payments_part', models.CharField(choices=[('all', 'Полная'), ('part', 'Неполная')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Corpus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
                ('complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.complex')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
                ('floor_count', models.PositiveIntegerField()),
                ('corpus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.corpus')),
            ],
        ),
        migrations.CreateModel(
            name='Riser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.section')),
            ],
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.section')),
            ],
        ),
        migrations.CreateModel(
            name='ComplexSalesDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.complex')),
            ],
        ),
        migrations.CreateModel(
            name='ComplexNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=300)),
                ('created', models.DateField(auto_now_add=True)),
                ('complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.complex')),
            ],
        ),
        migrations.CreateModel(
            name='ComplexImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='complexes/None/image/')),
                ('complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.complex')),
            ],
        ),
        migrations.CreateModel(
            name='ComplexDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
                ('file', models.FileField(upload_to='complexes/None/document/')),
                ('complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.complex')),
            ],
        ),
        migrations.CreateModel(
            name='ComplexBenefits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parking', models.BooleanField(blank=True, null=True)),
                ('school', models.BooleanField(blank=True, null=True)),
                ('playground', models.BooleanField(blank=True, null=True)),
                ('hospital', models.BooleanField(blank=True, null=True)),
                ('complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.complex')),
            ],
        ),
    ]
